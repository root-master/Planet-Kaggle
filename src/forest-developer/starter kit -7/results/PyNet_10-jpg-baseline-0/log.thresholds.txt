
--- [START 2017-05-25 23:07:06] ----------------------------------------------------------------


** dataset setting **
	(height,width)     = (112, 112)
	in_channels        = 3
	test_dataset.split = train-40479
	test_dataset.num   = 40479
	batch_size         = 128

** net setting **
	model_file = /root/share/project/pytorch/results/kaggle-forest/PyNet_10-jpg-baseline-0/snap/final.torch

** predict @ agument = default **
		test_loss=0.082268, test_acc=0.930480

** predict @ agument = left-right **
		test_loss=0.083891, test_acc=0.928913

** predict @ agument = up-down **
		test_loss=0.083664, test_acc=0.929258

** predict @ agument = rotate **
		test_loss=0.083605, test_acc=0.929099


** thresholding @ test_dir = /root/share/project/pytorch/results/kaggle-forest/PyNet_10-jpg-baseline-0/thresholds/default **
	method1:
	best_threshold=0.210000, best_score=0.931022

	method2:
	best_threshold
[0.24, 0.18, 0.24, 0.09, 0.33, 0.25, 0.2, 0.25, 0.22, 0.28, 0.07, 0.07, 0.12, 0.11, 0.1, 0.12, 0.03]
	best_scores
[0.93104089653340882, 0.93116202311452456, 0.93107644077132234, 0.93130548668553725, 0.93122041622443541, 0.931057599450962, 0.9310518469227842, 0.93102258038073171, 0.93103728999396518, 0.93120710107717597, 0.93102149624408337, 0.93103244127584373, 0.93110433577683649, 0.93108002787707433, 0.93109320141011698, 0.9313068417555963, 0.93102149624408337]

** thresholding @ test_dir = /root/share/project/pytorch/results/kaggle-forest/PyNet_10-jpg-baseline-0/thresholds/left-right **
	method1:
	best_threshold=0.195000, best_score=0.929683

	method2:
	best_threshold
[0.25, 0.19, 0.22, 0.09, 0.27, 0.23, 0.19, 0.21, 0.21, 0.28, 0.07, 0.06, 0.14, 0.11, 0.09, 0.1, 0.03]
	best_scores
[0.92950743956504112, 0.92957969137606367, 0.92949557287465012, 0.92987780564428812, 0.92956274283510998, 0.92955606288100845, 0.92952727337594265, 0.92947338483448994, 0.92947338483448994, 0.92964271405966592, 0.92947338483448994, 0.92948517689233401, 0.9296139267783855, 0.92956453017000495, 0.92957080223861077, 0.9297349417794033, 0.92947338483448994]

** thresholding @ test_dir = /root/share/project/pytorch/results/kaggle-forest/PyNet_10-jpg-baseline-0/thresholds/up-down **
	method1:
	best_threshold=0.200000, best_score=0.929700

	method2:
	best_threshold
[0.21, 0.16, 0.19, 0.09, 0.27, 0.24, 0.2, 0.22, 0.23, 0.24, 0.07, 0.07, 0.14, 0.11, 0.08, 0.11, 0.03]
	best_scores
[0.92960656923361062, 0.9298172557320048, 0.92969709287514202, 0.93002462201715264, 0.92972489912639389, 0.92972402129078768, 0.92962003777025248, 0.92962061740758395, 0.92963167894355803, 0.92969054893357927, 0.92960656923361062, 0.92962931649702629, 0.92973022646880221, 0.92966398829162933, 0.92969170539871271, 0.92990788787874723, 0.92960656923361062]

** thresholding @ test_dir = /root/share/project/pytorch/results/kaggle-forest/PyNet_10-jpg-baseline-0/thresholds/rotate **
	method1:
	best_threshold=0.205000, best_score=0.929688

	method2:
	best_threshold
[0.21, 0.16, 0.24, 0.09, 0.27, 0.24, 0.2, 0.21, 0.2, 0.26, 0.07, 0.07, 0.13, 0.15, 0.08, 0.11, 0.03]
	best_scores
[0.92964931015053442, 0.9298096573354282, 0.92974023652702431, 0.93000974343953757, 0.92977853231193985, 0.92969406643717101, 0.92969301370297064, 0.92964931015053442, 0.92966988258181682, 0.92978022147183303, 0.92964931015053442, 0.92966318977428142, 0.92979174699569245, 0.92971469661242123, 0.92974190524945288, 0.92994266434592454, 0.92964931015053442]

** thresholding @ test_dir = /root/share/project/pytorch/results/kaggle-forest/PyNet_10-jpg-baseline-0/thresholds/average **
	method1:
	best_threshold=0.210000, best_score=0.930689

	method2:
	best_threshold
[0.21, 0.18, 0.26, 0.13, 0.3, 0.24, 0.2, 0.23, 0.2, 0.29, 0.07, 0.07, 0.13, 0.1, 0.09, 0.12, 0.03]
	best_scores
[0.93068928160495257, 0.93087056637506727, 0.93074296414139823, 0.93099901021148856, 0.93086561493885822, 0.93077776757029229, 0.93071533580321386, 0.93072681127517032, 0.93071604434180821, 0.93094594707950318, 0.93068928160495257, 0.9307062853563568, 0.9307892078540575, 0.9307644670695091, 0.93080706006379699, 0.93097735136643212, 0.93068928160495257]

